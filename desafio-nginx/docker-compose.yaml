version: '3'

services: 
    nginx:
        build:
            context: nginx
        ports:
            - "8080:80"
        container_name: nginx
        depends_on:
            - node1
            - node2
            - node3
        tty: true
        networks: 
            - node_network
    node1:
        build: 
            context: node
        container_name: node1
        entrypoint: dockerize -wait tcp://db:3306 -timeout 20s docker-entrypoint.sh
        networks: 
            - node_network
        tty: true
        depends_on: 
            - db
        command: node /usr/src/app/index.js

    node2:
        build: 
            context: node
        container_name: node2
        entrypoint: dockerize -wait tcp://db:3306 -timeout 20s docker-entrypoint.sh
        networks: 
            - node_network
        tty: true
        depends_on: 
            - db
        command: node /usr/src/app/index.js

    node3:
        build: 
            context: node
        container_name: node3
        entrypoint: dockerize -wait tcp://db:3306 -timeout 20s docker-entrypoint.sh
        networks: 
            - node_network
        tty: true
        depends_on: 
            - db
        command: node /usr/src/app/index.js
    
    db:
        image: mysql:5.7
        command: --innodb-use-native-aio=0
        container_name: db
        restart: always
        tty: true
        volumes: 
            - ./dump:/docker-entrypoint-initdb.d
        environment: 
            MYSQL_DATABASE: nodedb
            MYSQL_ROOT_PASSWORD: root
            MYSQL_USER: user
            MYSQL_PASSWORD: pass
        networks:
            - node_network
            
networks:
    node_network:
        driver: bridge